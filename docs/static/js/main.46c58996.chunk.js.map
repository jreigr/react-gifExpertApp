{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAoB5C,OAEI,sBAAMC,SAdU,SAACC,GACjBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IAExBR,GAAc,SAAAS,GAAG,OAAMP,GAAN,mBAAsBO,OACvCN,EAAc,MAQlB,SACI,uBACIO,KAAM,OACNC,MAAQT,EACRU,SAtBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCLlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KACDC,EAAMD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARvB,kBAWZM,GAXY,4CAAH,sDCDPO,EAAc,SAAC,GAAqB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAElC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAOf,EAAMgB,IAAON,IACzB,kCAAMA,EAAN,WCHCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECCb,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAqBxC,OAdAC,qBAAW,WAERxB,EAAQC,GACFwB,MAAM,SAAAd,GACHY,EAAS,CACLf,KAAMG,EACNU,SAAS,SAItB,CAAEpB,IAIEqB,EDpBwBI,CAAczB,GAAjCa,EAFyB,EAE9BN,KAAaa,EAFiB,EAEjBA,QAGpB,OAEI,qCACI,6BAAMpB,IAELoB,GAAW,4CAEZ,qBAAKJ,UAAW,YAAhB,SAGQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADIA,EAAIC,aEjB3Be,EAAe,WAAO,IAAD,EAEMxC,mBAAS,CAAC,cAFhB,mBAEvByC,EAFuB,KAEX1C,EAFW,KAI9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAGA,6BAEQ0C,EAAWlB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAWA,GADJA,Y,MCbnC4B,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.46c58996.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({setCategories}) => {\n    \n    const [inputValue, setInputValue] = useState('');\n    \n    const handleInputChange = (e) =>{\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit= (e)=>{\n        e.preventDefault();\n        \n        if(inputValue.trim().length>2){\n\n            setCategories(cat => [ inputValue , ...cat ]);\n            setInputValue('');\n        }\n        \n        \n    }\n\n    return (\n        \n        <form onSubmit={handleSubmit}>\n            <input\n                type= \"text\"\n                value= {inputValue}\n                onChange= {handleInputChange}\n            />\n        </form>\n            \n        \n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","\n\n\nexport const getGifs = async( category ) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=CJbQYVgPW1eHCsLFRKEO07cwPnr7CvWj`\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n    const gifs= data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n    return gifs;\n    \n}\n","import React from 'react'\n\nexport const GifGridItem = ( { title, url} ) => {\n    \n    return (\n        <div className=\"card animate__animated animate__bounce\">\n            <img src= { url } alt= { title }/>\n            <p> { title } </p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n    \n    const {data:images, loading} = useFetchGifs( category );\n\n    \n    return (\n\n        <>\n            <h3>{ category }</h3>\n\n            {loading && <p>loading ...</p>}\n\n            <div className= \"card-grid\">\n            \n                {\n                    images.map( img => (\n                        <GifGridItem \n                            key = { img.id }\n                            {...img} \n                        />\n                    ))\n                }\n            </div>\n        </>\n        \n    )\n}\n","import { useEffect, useState } from 'react'\nimport { getGifs } from '../helpers/getGifs'\n\n\n\nexport const useFetchGifs = ( category ) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n\n       getGifs(category)\n            .then( img => {\n                setState({\n                    data: img,\n                    loading: false\n                });\n            }); \n\n    }, [ category ]);\n\n\n\n    return state;\n}","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n    \n    const [categories, setCategories] = useState(['One Punch']);\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories}/>\n            <hr />\n\n\n            <ol>\n                { \n                    categories.map(category => (\n                        <GifGrid \n                            key= { category }\n                            category={ category } \n                        />)\n                )}\n\n            </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}